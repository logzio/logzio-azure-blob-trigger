{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageAccountName": {
      "defaultValue": "logziologs",
      "minLength": 3,
      "maxLength": 24,
      "type": "string",
      "metadata": {
        "description": "The storage account name. Must be between 3 and 24 characters in length and contains numbers and lower-case letters only."
      }
    },
    "ContainerName": {
      "defaultValue": "logs",
      "minLength": 3,
      "maxLength": 24,
      "type": "string",
      "metadata": {
        "description": "The name of the blob container within the storage account. Must be between 3 and 63 characters in length and contains numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
      }
    },
    "LogsPath": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The path of the logs in the container. Leave empty if the logs are in root directory of the container."
      }
    },
    "LogzioURL": {
      "defaultValue": "https://listener.logz.io:8071",
      "type": "string",
      "allowedValues": [
        "https://listener.logz.io:8071",
        "https://listener-au.logz.io:8071",
        "https://listener-ca.logz.io:8071",
        "https://listener-eu.logz.io:8071",
        "https://listener-nl.logz.io:8071",
        "https://listener-uk.logz.io:8071",
        "https://listener-wa.logz.io:8071"
      ],
      "metadata": {
        "description": "The Logz.io listener URL fot your region. (For more details, see the regions page: https://docs.logz.io/user-guide/accounts/account-region.html)"
      }
    },
    "LogzioToken": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Your Logz.io logs token. (Can be retrieved from the Manage Token page.)"
      }
    }
  },
  "variables": {
    "FunctionAppName": "[concat('logzio-app-', uniqueString(resourceGroup().id))]",
    "AppServicePlanName": "[concat('ASP-', variables('FunctionAppName'), '-', uniqueString(resourceGroup().id))]",
    "AppInsightsName": "[variables('FunctionAppName')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[parameters('StorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2021-02-01",
          "name": "[concat('default/', parameters('ContainerName'))]",
          "properties": {},
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/', parameters('StorageAccountName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[variables('AppServicePlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "name": "[variables('AppInsightsName')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/Sites",
      "apiVersion": "2020-12-01",
      "name": "[variables('FunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
        "reserved": true,
        "siteConfig": {
          "pythonVersion": "3.8",
          "linuxFxVersion": "PYTHON|3.8",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components/', variables('AppInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[concat('InstrumentationKey=', reference(resourceId('Microsoft.Insights/components/', variables('AppInsightsName')), '2020-02-02-preview').InstrumentationKey, ';IngestionEndpoint=https://centralus-0.in.applicationinsights.azure.com/')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2021-02-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "https://logzioazureblobtrigger.blob.core.windows.net/logzio/logzio_function.zip"
            },
            {
              "name": "ContainerLogsPath",
              "value": "[if(equals(parameters('LogsPath'), ''), concat(parameters('ContainerName'), '/{name}'), concat(parameters('ContainerName'), '/', parameters('LogsPath'), '/{name}'))]"
            },
            {
              "name": "StorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2021-02-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "LogzioURL",
              "value": "[parameters('LogzioURL')]"
            },
            {
              "name": "LogzioToken",
              "value": "[parameters('LogzioToken')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('AppServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components/', variables('AppInsightsName'))]"
      ]
    }
  ]
}